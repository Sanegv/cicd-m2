name: Manual Deployment to Production
on:
  workflow_dispatch:    
permissions:
    actions: read
    contents: read
    security-events: write
    id-token: write

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    name: Build and Push Images
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            
      - name: Login to Container Registry
        run: |
          az acr login --name ${{ secrets.REGISTRY_NAME }}
          
      - name: Build and Push Frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: ${{ secrets.REGISTRY_NAME }}.azurecr.io/frontend:${{ github.sha }}
          
      - name: Build and Push Backend
        uses: docker/build-push-action@v5
        with:
          context: ./backend
          push: true
          tags: ${{ secrets.REGISTRY_NAME }}.azurecr.io/backend:${{ github.sha }}

  deploy-production:
    name: Deploy to Production
    runs-on: ubuntu-latest
    needs: build
    environment: production
    steps:
      - name: Azure Login
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
            
      - name: Deploy Frontend to Production
        run: |
          az webapp config container set \
            --name ${{ secrets.FRONTEND_APP_NAME }} \
            --resource-group ${{ secrets.RESOURCE_GROUP_NAME }} \
            --container-image-name ${{ secrets.REGISTRY_NAME }}.azurecr.io/frontend:${{ github.sha }}
            
      - name: Deploy Backend to Production
        run: |
          az webapp config container set \
            --name ${{ secrets.BACKEND_APP_NAME }} \
            --resource-group ${{ secrets.RESOURCE_GROUP_NAME }} \
            --container-image-name ${{ secrets.REGISTRY_NAME }}.azurecr.io/backend:${{ github.sha }}
            
      - name: Run Health Check
        run: |
          sleep 30
          curl -f https://${{ secrets.BACKEND_APP_NAME }}.azurewebsites.net/ || exit 1